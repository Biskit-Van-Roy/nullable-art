/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ecuturaAi.glb 
Author: MWintersberger (https://sketchfab.com/mwintersberger)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/gottwaig-wunderkammer21-3d-ai-skybox-9991a9e8045449648cbe75eab82b09df
Title: GöttwAIg – Wunderkammer(21) | 3D AI Skybox
*/

import React, { useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import  * as THREE from 'three'
export function EcuturaAi(props) {
  const group = React.useRef()
  const { nodes, materials, animations } = useGLTF('/models/ecuturaAi.glb')
  // const { actions } = useAnimations(animations, group)
  //     useEffect(() => {
  //         const names = Object.keys(actions);
  //         names.forEach((name) => {
  //           actions[name]
  //             ?.reset()
  //             .setLoop(THREE.LoopRepeat, Infinity)
  //             .fadeIn(0.2)
  //             .play();
  //         });
      
  //         return () => names.forEach((name) => actions[name]?.stop());
  //       }, [actions]);
    
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="Object_0" rotation={[Math.PI / 2, 0, 0]} scale={2}>
                <mesh name="Object_4" geometry={nodes.Object_4.geometry} material={materials['Material.006']} />
              </group>
              <group name="model_1">
                <mesh name="Object_6" geometry={nodes.Object_6.geometry} material={materials['model.002']} />
                <mesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials['model.002']} />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/ecuturaAi.glb')
